1. Установка, настройка ufw (Uncomplicated Firewall)
    sudo apt install ufw
Список доступных предустановок приложений
    sudo ufw app list
Разрешение подключений по SSH
    #22 порт
        sudo ufw allow SSH
        или
        sudo ufw allow 22
    #22 порт, но только TCP/IP
        sudo ufw allow 22/tcp
    #!настраиваем SSH на соответствующий порт по TCP/IP
        sudo ufw allow 33322/tcp
Проверка состояния ufw
    sudo ufw status
Более подробная информация
    sudo ufw status verbose
Активация ufw (предванительно разрешить SSH!)
    sudo ufw enable
Удаление правил по номеру правила
    sudo ufw status numbered
    #если хотим удалить правило номер 2
    sudo ufw delete 2
Отключение ufw
    sudo ufw disable
Сброс настроек до состояния по умолчанию
    sudo ufw reset

2. Установка nginx
    sudo apt update
    sudo apt install nginx
Настройка ufw
Проверка списка доступных предустановок приложений
    sudo ufw app list
    Available applications:
    ...
      Nginx Full
      Nginx HTTP
      Nginx HTTPS
    ...
Разрешаем nginx
    sudo ufw allow 'Nginx Full'
Проверяем статус
    sudo ufw status
        Status: active
        To                         Action      From
        --                         ------      ----
        Nginx Full                 ALLOW       Anywhere
        Nginx Full (v6)            ALLOW       Anywhere (v6)
Если nginx отсутствует, то:
Создаём и открываем файл nginx.ini
    sudo vim /etc/ufw/applications.d/nginx.ini
Вставляем следующий сниппет:
    [Nginx HTTP]
    title=Web Server
    description=Enable NGINX HTTP traffic
    ports=80/tcp

    [Nginx HTTPS] \
    title=Web Server (HTTPS) \
    description=Enable NGINX HTTPS traffic
    ports=443/tcp

    [Nginx Full]
    title=Web Server (HTTP,HTTPS)
    description=Enable NGINX HTTP and HTTPS traffic
    ports=80,443/tcp




2. Устанавливаем nginx с brotli
Добавляем репозиторий
    sudo apt-add-repository -y ppa:hda-me/nginx-stable
Устанавливаем сервер и модули
    sudo apt install brotli nginx nginx-module-brotli
Разрешаем запуск и автозагрузку при старте ОС
    sudo systemctl unmask nginx.service

3. Настраиваем brotli в nginx
Открываем настройки сервера
    sudo vim /etc/nginx/nginx.conf
Включаем brotli (раскоммернтируем строки)
    load_module modules/ngx_http_brotli_filter_module.so;
    load_module modules/ngx_http_brotli_static_module.so;
Настраиваем brotli в соответствии со сниппетом:
    # Brotli
        brotli on;
        #уровень сжатия - 6 (удалить перед вставкой)
        brotli_comp_level 6;

        #обрабатываемые типы (удалить перед вставкой)
        brotli_types
            text/xml
            image/svg+xml
            application/x-font-ttf
            image/vnd.microsoft.icon
            application/x-font-opentype
            application/json
            font/eot
            application/vnd.ms-fontobject
            application/javascript
            font/otf
            application/xml
            application/xhtml+xml
            text/javascript
            application/x-javascript
            text/$;


5. Установка certbot
Добавляем источники
    sudo apt install software-properties-common
    sudo add-apt-repository ppa:certbot/certbot
    sudo apt update #обновляемся
Ставим certbot

sudo apt install python-certbot-nginx
Генерируем ключ

sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
Создаём папку для снипетов nginx

sudo mkdir -p /etc/nginx/snippets/
Создаём снипет для SSL

sudo nano /etc/nginx/snippets/ssl-params.conf
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;

ssl_dhparam /etc/ssl/certs/dhparam.pem;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

add_header Strict-Transport-Security "max-age=63072000" always;
