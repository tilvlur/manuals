"–ü–õ–ê–ì–ò–ù–´ 'vim-plug'
call plug#begin('~/.vim/plugged')
    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
    Plug 'morhetz/gruvbox' "–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ gruvbox
    Plug 'jiangmiao/auto-pairs' "–í—Ç–æ—Ä—ã–µ —Å–∫–æ–±–∫–∏
    Plug 'vim-airline/vim-airline'
    Plug 'ryanoasis/vim-devicons'
    Plug 'easymotion/vim-easymotion' "–ó–∞–ø—É—Å–∫ –ø–æ Leader+s
call plug#end()

"–ù–ê–°–¢–†–û–ô–ö–ò
    set nocompatible "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Vi
    set mouse=n "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º—ã—à–∏ (Normal mode and Terminal modes)
    set wildmenu "–î–æ–ø. –º–µ–Ω—é –ø–æ Tab –≤ –∫–æ–º–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    set showcmd "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–≤–æ–¥–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥
    set encoding=UTF-8 "–ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    set termguicolors "24-bit color in xterm-compatible terminals support
    syntax enable "–ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    set background=dark "–¢—ë–º–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    colorscheme gruvbox "–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
    set number "–ùy–º–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫
    set cursorline "–ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ —Å –∫—É—Ä—Å–æ—Ä–æ–º
"–†–µ–∂–∏–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    let &t_SI.="\e[5 q" "SI = —Ä–µ–∂–∏–º –≤—Å—Ç–∞–≤–∫–∏ (5 - –º–∏–≥–∞—é—â–∞—è —á–µ—Ä—Ç–∞)
    let &t_SR.="\e[3 q" "SR = —Ä–µ–∂–∏–º –∑–∞–º–µ–Ω—ã (3 - –º–∏–≥–∞—é—â–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ)
    let &t_EI.="\e[1 q" "EI = –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º (1 - –º–∏–≥–∞—é—â–∏–π –±–ª–æ–∫)
"–ü–æ–∏—Å–∫
    set hlsearch "–ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
    set incsearch "–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫
    set ignorecase "–ü–æ–∏—Å–∫ —Å –±–µ–∑ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –Ω–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
    set smartcase "–ü–æ–∏—Å–∫ —Å –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
"–ü–æ–Ω–∏–∂–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤–≤–æ–¥–∞ Esc
    set timeout
    set ttimeout
    set timeoutlen=3000
    set ttimeoutlen=50
"–í–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤, —Ä–∞–∑—Ä—ã–≤–æ–≤ —Å—Ç—Ä–æ–∫
    set wrap
    set linebreak
"–û—Ç–∫–ª—é—á–µ–Ω–∏–µ .swp –∏ ~ (—Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö) —Ñ–∞–π–ª–æ–≤
    set nobackup
    set noswapfile
"–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    set keymap=russian-jcukenwin
    set iminsert=0 "–í–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∞ —Å—Ç–∞—Ä—Ç–µ (start > i)
    set imsearch=0 "–ü–æ–∏—Å–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∞ —Å—Ç–∞—Ä—Ç–µ (start > /)
    "–°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞ –∫—É—Ä—Å–æ—Ä–∞ (–≤ GNOME Terminal –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    highlight lCursor guifg=NONE guibg=Cyan
"Python
    set tabstop=4 "TAB = 4 –ø—Ä–æ–±–µ–ª–∞
    set shiftwidth=4 ">> << = 4 –ø—Ä–æ–±–µ–ª–∞
    set smarttab "Backspase = shiftwidth
    set expandtab "–¢–∞–±—ã —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤
    set autoindent "–ö–æ–ø–∏—Ä—É–µ—Ç –æ—Ç—Å—Ç—É–ø —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
    set smartindent "–ê–≤—Ç–æ–æ—Ç—Å—Ç—É–ø—ã –¥–ª—è C-–ø–æ–¥–æ–±–Ω—ã—Ö —è–∑—ã–∫–æ–≤
    let python_highlight_all = 1 "Enable all Python syntax highlighting features
    filetype plugin indent on "–û—Ç—Å—Ç—É–ø—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Ç—Å–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    "–ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤—ã—Ä–µ–∑–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –∫–æ–Ω—Ü–∞—Ö (—Ç–æ–ª—å–∫–æ –≤ .py —Ñ–∞–π–ª–∞—Ö)
    autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
    "–í .py —Ñ–∞–π–ª–∞—Ö –≤–∫–ª—é—á–∞–µ–º —É–º–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –ø–æ—Å–ª–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
    filetype indent on
    let g:ycm_python_binary_path = 'python'
    let g:indent_guides_start_level = 2
    let g:indent_guides_auto_colors = 1
    let g:indentLine_leadingSpaceChar = '¬∑'
    let g:indentLine_leadingSpaceEnabled = 1
"Airline, Powerline
    let g:airline_powerline_fonts = 1 "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Powerline-—à—Ä–∏—Ñ—Ç–æ–≤
    let g:airline#extensions#keymap#enabled = 0 "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å Keymap
    "–ó–æ–Ω–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞
    let g:airline_section_z = "%l/%#__accent_bold#%L%{g:airline_symbols.maxlinenr}%#__restore__#:%v"
    "–°—Ç—Ä–µ–ª–∫–∏, –∏–∫–æ–Ω–∫–∏ –∏ —Ç.–ø.
    if !exists('g:airline_symbols')
        let g:airline_symbols = {}
    endif
    "unicode symbols
    let g:airline_left_sep = '¬ª'
    let g:airline_left_sep = '‚ñ∂'
    let g:airline_right_sep = '¬´'
    let g:airline_right_sep = '‚óÄ'
    let g:airline_symbols.crypt = 'üîí'
    let g:airline_symbols.linenr = '‚ò∞'
    let g:airline_symbols.linenr = '‚êä'
    let g:airline_symbols.linenr = '‚ê§'
    let g:airline_symbols.linenr = '¬∂'
    let g:airline_symbols.maxlinenr = ''
    let g:airline_symbols.maxlinenr = '„èë'
    let g:airline_symbols.branch = '‚éá'
    let g:airline_symbols.paste = 'œÅ'
    let g:airline_symbols.paste = '√û'
    let g:airline_symbols.paste = '‚à•'
    let g:airline_symbols.spell = 'Íû®'
    let g:airline_symbols.notexists = '…Ü'
    let g:airline_symbols.whitespace = 'Œû'
    "powerline symbols
    let g:airline_left_sep = 'ÓÇ∞'
    let g:airline_left_alt_sep = 'ÓÇ±'
    let g:airline_right_sep = 'ÓÇ≤'
    let g:airline_right_alt_sep = 'ÓÇ≥'
    let g:airline_symbols.branch = 'ÓÇ†'
    let g:airline_symbols.readonly = 'ÓÇ¢'
    let g:airline_symbols.linenr = '‚ò∞'
    let g:airline_symbols.maxlinenr = 'ÓÇ°'
    let g:airline_symbols.dirty='‚ö°'

"MAPPINGS
"–í–∫–ª./–í—ã–∫–ª. NERDTree: Ctrl+n
    map <C-n> :NERDTreeToggle<CR>
"–°–º–µ–Ω–∞ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –Ω–∞ Ctrl-l –≤–º–µ—Å—Ç–æ Ctrl-^
    inoremap <C-l> <C-^>
"For easymotion plugin
    let g:mapleader=',' "–ó–∞–º–µ–Ω–∞ Leaderkey –Ω–∞ ','
    map <Leader> <Plug>(easymotion-prefix)
